[{"input_text":"How to aggregate the dataframe into one using python?DF1:\nProduct         Party   x   y   Currency    Parent  Child\nPurchase    5AAA64870   2   0.1 USD         Apple   Smartphone\nPurchase    5AAA64870   1   0.3 USD         Apple   Smartphone\nPurchase    5AAA64870   1   0.3 USD         Apple   Smartphone\nPurchase    5AAA64870   1   0.3 USD         Apple   Smartphone\nPurchase    5AAA64870   1   0.3 USD         Apple   Smartphone\nPurchase    5AAA64870   1   0.3 USD         Apple   Smartphone\n\nExpected output:\nProduct     Party       x   y   Currency    Parent  Child\nPurchase    5AAA64870   7   1.6 USD         Apple   Smartphone\n\nCode:\ndf1 = df1[df1['Product'] == 'Purchase'].groupby(\n            ['Product', 'Party'])['x', 'y'].sum()\n\nSorry, this sounds very easy question, but I am unable to aggregate the data into one row like the above expected output. Appreciate your help in this","output_text":"It was pretty easy :). But just because you are a newbee i am gonna explain the logic behind it, so when you groupby and pass a list. Pandas basically says okay this is now the index so if the index is equal another index i shall smush them together. If you add index columns, well he is gonna smush them together according to your elements.\ndf1[df1['Product'] == 'Purchase'].groupby(\n                ['Product', 'Party','Parent','Currency','Child'],as_index=False)['x', 'y'].sum()"},{"input_text":"How to compare a three tiered dictionary in python and only print values that dont matchI have two Dict as\nRT = {'Solution 1': {'Returned Solution': 'Flight', 'Airline Class': 'Economy', 'Price': 'CAD 255.96'}, 'Solution 2': {'Returned Solution': 'Hotel', 'Hotel Name': 'Rosewood Hotel Georgia', 'Hotel Price': 'CAD 999', 'Cancellation Type': 'GUAR'}}\n\nAA = {'Solution 1': {'Returned Solution': 'Flight', 'Airline Class': 'Main Cabin', 'Price': 'CAD 255.96'}, 'Solution 2': {'Returned Solution': 'Hotel', 'Hotel Name': 'Rosewood Hotel Georgia', 'Hotel Price': '(CAD 850 + fees)'}}\n\nI am trying to compare this nested Dict and print Value that are not same.\nExpecting output as:\nAirline Class : 'Economy' 'Main Cabin'\nHotel Price : 'CAD 999' '(CAD 850 + fees)'\nCancellation Type: 'GUAR' 'N\\A'","output_text":"RT = {'Solution 1': {'Returned Solution': 'Flight', 'Airline Class': 'Economy', 'Price': 'CAD 255.96'}, 'Solution 2': {'Returned Solution': 'Hotel', 'Hotel Name': 'Rosewood Hotel Georgia', 'Hotel Price': 'CAD 999', 'Cancellation Type': 'GUAR'}}\n\nAA = {'Solution 1': {'Returned Solution': 'Flight', 'Airline Class': 'Main Cabin', 'Price': 'CAD 255.96'}, 'Solution 2': {'Returned Solution': 'Hotel', 'Hotel Name': 'Rosewood Hotel Georgia', 'Hotel Price': '(CAD 850 + fees)'}}\nans = {}\nfor k,v in RT.items():\n    cur = []\n    for k_, v_ in v.items():\n        if k_ in AA[k]:\n            if (AA[k][k_]) != v_:\n                cur.append(AA[k][k_])\n                cur.append(v_)\n                ans[k_] = cur\n                cur = []\n        else:\n            cur.append(v_)\n            cur.append(&quot;NA&quot;)\n            ans[k_] = cur\n            cur =[]\n    \nfor k,v in ans.items():\n    print(k, v)"},{"input_text":"How to drop elements in 'y' position of a nested list of tuples?I have a nested list of tuples:\n[[('complacency', 0.0001833514688884038),\n  ('complexity', 0.00020885722118234196),\n  ('system', 0.00030831926569582427),\n  ('accidents', 0.0003527060442832197),\n  ('major', 0.0003577792651629483),\n  ('accident', 0.000556904280447189),\n  ('Safety', 0.0005632664174249453),\n  ('issue', 0.000604949484895331),\n  ('risk', 0.000655457410972149),\n  ('complex', 0.0007215989124478362)],\n [('situation', 0.00029301996954456724),\n  ('awareness', 0.0003444184039291439),\n  ('people', 0.00201798567882153),\n  ('loss', 0.002527094648295153),\n  ('constructs', 0.002921195578537488),\n  ('complacency', 0.003951273394687846),\n  ('human', 0.004937009924663634),\n  ('world', 0.004937009924663634),\n  ('Dekker', 0.004963844372504768),\n  ('representational', 0.006297840866917582)]]\n\nI want to drop the y element from every tuple (the numbers), but I need to be able to preserve the nested structure of the list.","output_text":"You can use list comprehension:\nlst = [[('complacency', 0.0001833514688884038), ('complexity', 0.00020885722118234196), ('system', 0.00030831926569582427), ('accidents', 0.0003527060442832197), ('major', 0.0003577792651629483), ('accident', 0.000556904280447189), ('Safety', 0.0005632664174249453), ('issue', 0.000604949484895331), ('risk', 0.000655457410972149), ('complex', 0.0007215989124478362)], [('situation', 0.00029301996954456724), ('awareness', 0.0003444184039291439), ('people', 0.00201798567882153), ('loss', 0.002527094648295153), ('constructs', 0.002921195578537488), ('complacency', 0.003951273394687846), ('human', 0.004937009924663634), ('world', 0.004937009924663634), ('Dekker', 0.004963844372504768), ('representational', 0.006297840866917582)]]\n\noutput = [[x for x, _ in sublst] for sublst in lst]\n\nprint(output)\n# [['complacency', 'complexity', 'system', 'accidents', 'major', 'accident', 'Safety', 'issue', 'risk', 'complex'],\n#  ['situation', 'awareness', 'p eple', 'loss', 'constructs', 'complacency', 'human', 'world', 'Dekker', 'representational']]"},{"input_text":"How can I get to show a picture from file on my jupyter notebook?I have my picture in the directory Images, next to the notebook.","output_text":"This needs to be in a Markdown cell:\n![](Images\/Image_name.png)"},{"input_text":"creating a weekly range in pandasI ran into such a problem, I have the following dataframe\n\nand I would like to convert it to this kind of dataframe\n\nI tried to solve this problem, but without success ((\nhere is the code for creating a small dataframe\ndata = {'Date':['2020-01-01','2020-01-02','2020-01-03','2020-01-04','2020-01-05','2020-01-06','2020-01-07','2020-01-08','2020-01-09','2020-01-10','2020-01-11','2020-01-12','2020-01-13','2020-01-14'],\n        'year':['2020','2020','2020','2020','2020','2020','2020', '2020','2020','2020','2020','2020','2020','2020'],\n        'week':['1','1','1','1','1','1','1','2','2','2','2','2','2','2',]}\n\ndf_test = pd.DataFrame(data)","output_text":"First idea is convert per year and week first and last values of Date by GroupBy.transform:\ng = df_test.groupby(['year','week'])['Date']\ndf_test['week range'] = g.transform('first') + '-' + g.transform('last') \nprint (df_test)\n          Date  year week             week range\n0   2020-01-01  2020    1  2020-01-01-2020-01-07\n1   2020-01-02  2020    1  2020-01-01-2020-01-07\n2   2020-01-03  2020    1  2020-01-01-2020-01-07\n3   2020-01-04  2020    1  2020-01-01-2020-01-07\n4   2020-01-05  2020    1  2020-01-01-2020-01-07\n5   2020-01-06  2020    1  2020-01-01-2020-01-07\n6   2020-01-07  2020    1  2020-01-01-2020-01-07\n7   2020-01-08  2020    2  2020-01-08-2020-01-14\n8   2020-01-09  2020    2  2020-01-08-2020-01-14\n9   2020-01-10  2020    2  2020-01-08-2020-01-14\n10  2020-01-11  2020    2  2020-01-08-2020-01-14\n11  2020-01-12  2020    2  2020-01-08-2020-01-14\n12  2020-01-13  2020    2  2020-01-08-2020-01-14\n13  2020-01-14  2020    2  2020-01-08-2020-01-14\n\nOr if possible use Series.dt.to_period:\ndf_test['week range'] = df_test['Date'].dt.to_period('W-TUE')\nprint (df_test)\n         Date  year week             week range\n0  2020-01-01  2020    1  2020-01-01\/2020-01-07\n1  2020-01-02  2020    1  2020-01-01\/2020-01-07\n2  2020-01-03  2020    1  2020-01-01\/2020-01-07\n3  2020-01-04  2020    1  2020-01-01\/2020-01-07\n4  2020-01-05  2020    1  2020-01-01\/2020-01-07\n5  2020-01-06  2020    1  2020-01-01\/2020-01-07\n6  2020-01-07  2020    1  2020-01-01\/2020-01-07\n7  2020-01-08  2020    2  2020-01-08\/2020-01-14\n8  2020-01-09  2020    2  2020-01-08\/2020-01-14\n9  2020-01-10  2020    2  2020-01-08\/2020-01-14\n10 2020-01-11  2020    2  2020-01-08\/2020-01-14\n11 2020-01-12  2020    2  2020-01-08\/2020-01-14\n12 2020-01-13  2020    2  2020-01-08\/2020-01-14\n13 2020-01-14  2020    2  2020-01-08\/2020-01-14\n\n\nper = df_test['Date'].dt.to_period('W-TUE')\ndf_test['week range'] = (per.dt.to_timestamp().dt.strftime('%Y-%m-%d') + ' - ' + \n                         per.dt.to_timestamp(how='end').dt.strftime('%Y-%m-%d'))\nprint (df_test)\n         Date  year week               week range\n0  2020-01-01  2020    1  2020-01-01 - 2020-01-07\n1  2020-01-02  2020    1  2020-01-01 - 2020-01-07\n2  2020-01-03  2020    1  2020-01-01 - 2020-01-07\n3  2020-01-04  2020    1  2020-01-01 - 2020-01-07\n4  2020-01-05  2020    1  2020-01-01 - 2020-01-07\n5  2020-01-06  2020    1  2020-01-01 - 2020-01-07\n6  2020-01-07  2020    1  2020-01-01 - 2020-01-07\n7  2020-01-08  2020    2  2020-01-08 - 2020-01-14\n8  2020-01-09  2020    2  2020-01-08 - 2020-01-14\n9  2020-01-10  2020    2  2020-01-08 - 2020-01-14\n10 2020-01-11  2020    2  2020-01-08 - 2020-01-14\n11 2020-01-12  2020    2  2020-01-08 - 2020-01-14\n12 2020-01-13  2020    2  2020-01-08 - 2020-01-14\n13 2020-01-14  2020    2  2020-01-08 - 2020-01-14"},{"input_text":"Black Screen When Using on_enter Calling a Function with Kivy\/PythonI'm new to Python, and especially new to Kivy.\nI'm sure that whatever I'm doing is a simple fix, but I just cannot figure it out for the life of me.\nI've been doing this all in a Python file, with no my.kv.\nWhat I'm trying to do is call a function upon entering the first screen of my app, but when I do this it just gives me a blank screen.\nSorry if my code is an absolute mess.\nThis is my code:\nfrom kivy.app import App \nfrom kivy.uix.widget import Widget\nfrom kivy.uix.textinput import TextInput\nfrom kivy.uix.button import Button\nfrom kivy.uix.screenmanager import Screen, ScreenManager\nfrom kivy.lang import Builder\nfrom kivy.uix.gridlayout import GridLayout\nimport requests \nimport json\n\nBuilder.load_string(&quot;&quot;&quot;\n&lt;Manager&gt;:\n    BuildScreen:\n    SubmitScreen:\n&lt;BuildScreen&gt;:\n    name: 'page1'\n    on_enter: app.BuildAnswer()\n\n\n&lt;SubmitScreen&gt;:\n    name: 'page2'\n    on enter: app.SubmitAnswer()\n    GridLayout:\n        cols:1 \n        row_force_default:True \n        row_default_height:40\n        \n        Button:\n            text:&quot;Return&quot; \n            on_release: root.manager.current = 'page1'\n\n&quot;&quot;&quot;)\n\n\nclass MainWidget(Widget):\n    pass\n\nclass Manager(ScreenManager):\n    pass\n\nclass BuildScreen(Screen):\n    pass\n\nclass SubmitScreen(Screen):\n    pass\n\n\nclass TheLabApp(App):\n    def __init__(self,**kwargs):\n        super(TheLabApp, self).__init__(**kwargs)\n\n    def BuildAnswer(self):   \n        layout = GridLayout(cols=1, row_force_default=True, row_default_height=40)\n        self.spell = TextInput(hint_text = &quot;Enter Spell&quot;, multiline=False)\n        button = Button(text=&quot;Get Spell&quot;, on_release=self.SubmitAnswer)\n        layout.add_widget(self.spell)\n        layout.add_widget(button)\n        return layout\n\n    def SubmitAnswer(self):\n        user_input = self.spell.text\n        #making input into url ready thingy\n\n        making_string = ''.join(str(x) for x in user_input)\n\n        x = '-'.join(making_string.split())\n        url = requests.get('https:\/\/www.dnd5eapi.co\/api\/spells\/' + x)\n\n        #making it look pretty\n        pretty_spells = json.dumps(url.json(), indent=2)\n\n        #making it so I can get values from json \n        resp = json.loads(pretty_spells)\n\n        print(resp['name'])\n        print(resp['range'])\n#the rest is just printing more of the spell's information\n\n    def build(self):\n        sm=ScreenManager()\n        sm.add_widget(BuildScreen(name=&quot;page1&quot;))\n        sm.add_widget(SubmitScreen(name=&quot;page2&quot;))\n        return sm\n  \n\nAny and all help would be incredibly appreciated, as I've been trying to find a solution for a couple days now.","output_text":"A couple problems with your code.\nFirst, the BuildAnswer() method creates and returns a layout, but returning something from an on_enter method has no effect. If you want that layout to appear in the BuildScreen, you must explicitly add that layout to the BuildScreen instance.\nSecond, defining the BuildAnswer() method in the TheLabApp class makes it difficult to access the BuildScreen instance. This is because the on_enter method is triggered very early in the process (before the root of the App is assigned).\nI suggest moving the BuildAnswer() method to the BuildScreen class, and calling add_widget() to actually add the created layout to the BuildScreen instance. To do that, start by modifying your kv:\n&lt;BuildScreen&gt;:\n    name: 'page1'\n    on_enter: self.BuildAnswer()  # reflects new location of BuildAnswer()\n\nAnd modifying your python code:\nclass BuildScreen(Screen):\n    def BuildAnswer(self):\n        layout = GridLayout(cols=1, row_force_default=True, row_default_height=40)\n        self.spell = TextInput(hint_text=&quot;Enter Spell&quot;, multiline=False)\n        button = Button(text=&quot;Get Spell&quot;, on_release=App.get_running_app().SubmitAnswer)  # to access the SubmitAnswer method\n        layout.add_widget(self.spell)\n        layout.add_widget(button)\n        self.add_widget(layout)  # add layout to the GUI\n        # return layout\n\nAnd remove the BuildAnswer() method from the TheLabApp class."},{"input_text":"Does html have containers that could not seen with soup method?I am trying to make an app that takes values from a website. For instance, from [https:\/\/steamcommunity.com\/id\/pintipanda\/games\/?tab=all] this page I want to get every id of the div that are classed as &quot;gameListRow&quot;.\nBut when I try:\nfrom bs4 import BeautifulSoup\nimport requests\n\nhtml_text = requests.get('https:\/\/steamcommunity.com\/id\/pintipanda\/games\/?tab=all').text\nsoup = BeautifulSoup(html_text, 'lxml')\ndiv = soup.find_all('div', {'class': 'gameListRow'})\n\nprint(div)\n\nIt prints an empty list. How to choose all boxes classed under gameListRow?","output_text":"The data you see is stored inside &lt;script&gt; on the page (so beautifulsoup doesn't see it). To parse it, you can use this example:\nimport re\nimport json\nimport requests\n\n\nurl = &quot;https:\/\/steamcommunity.com\/id\/pintipanda\/games\/?tab=all&quot;\n\ndata = requests.get(url).text\ndata = re.search(r&quot;var rgGames = (.*]);&quot;, data).group(1)\ndata = json.loads(data)\n\n# uncomment to print all data:\n# print(json.dumps(data, indent=4))\n\nfor d in data:\n    print(&quot;{:&lt;10} {}&quot;.format(d[&quot;appid&quot;], d[&quot;name&quot;]))\n\nPrints:\n730        Counter-Strike: Global Offensive\n578080     PUBG: BATTLEGROUNDS\n261550     Mount &amp; Blade II: Bannerlord\n570        Dota 2\n305620     The Long Dark\n550        Left 4 Dead 2\n413150     Stardew Valley\n\n\n..."},{"input_text":"Django: get all objects with a defined set of related objectsLet's say we have a many2many relationship as follows:\nfrom django.db import models\n\nclass Author(models.Model):\n    name = models.CharField(max_length=100)\n\nclass Book(models.Model):\n    title = models.CharField(max_length=100) \n    authors = models.ManyToManyField(Author, related_name=&quot;books&quot;)\n\nand now I have a known set of Authors:\nauthors = Author.objects.filter(...)\n\nHow can I get all the books that are authored by that exact set of authors?\nbooks = Book.objects.filter(X)\n\nwhat is X? Such that I have all the books authored by exactly that set of authors?\nI have tried, just because:\nbooks = Book.objects.filter(authors__in=authors)\n\nBut nah, that returns the books to which any of those authors contributed it seems. I want the books that all of those authors contributed to and only those authors.\nThus far, this has stumped me.","output_text":"You can check if the number of matching authors is the amount of authors, so:\nfrom django.db.models import Count, Q\n\nnauthors = authors.count()\n\nBook.objects.alias(\n    nauthors=Count('authors'),\n    nmatch_authors=Count('authors', filter=Q(authors__in=authors)),\n).filter(\n    nauthors=nauthors,\n    nmatched_authors=nauthors\n)\nIt is important that authors does not contain duplicates."}]